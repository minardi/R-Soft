window.client={Models:{},Collections:{},Views:{},Routers:{},init:function(){"use strict";console.log("Hello from Backbone!");new client.Views.CollectionView,new client.Views.OrderView({el:$("#order-container"),model:new client.Models.OrderModel})}},$(document).ready(function(){"use strict";client.init()}),this.JST=this.JST||{},this.JST["app/scripts/templates/CategoryView.ejs"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+="<div class='category-name'>\r\n	"+(null==(__t=category_name)?"":__t)+"\r\n</div>\r\n<div class='category-content'></div>";return __p},this.JST["app/scripts/templates/CategoryViewCollection.ejs"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="<p>Your content here.</p>\r\n\r\n";return __p},this.JST["app/scripts/templates/Order.ejs"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+='\r\n    <p id="order_head"> Order</p>\r\n\r\n    <div id="order_items" class="order_items">\r\n    </div>\r\n    \r\n    <input type = "button" id = "order_close" value = "Close order">  </input>\r\n';return __p},this.JST["app/scripts/templates/OrderItem.ejs"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+='<div id="order_item"  class="order_item">\r\n	<div class="order_item_name"><?=name?></div>\r\n	<div id="add_amount" class="add_amount"><br/></div>\r\n	<div id="order_item_amount" class="order_item_amount"><?=amount?></div>\r\n	<div id="remove_amount" class="remove_amount"><br/></div>\r\n	<div class="order_item_price"><?=price?></div>\r\n	<span class="order_item_status"><?=status?></span>\r\n</div>\r\n\r\n';return __p},this.JST["app/scripts/templates/OrderItemCollection.ejs"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="<p>Your content here.</p>\r\n\r\n";return __p},this.JST["app/scripts/templates/TableCollectionView.ejs"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="<p>Your content here.</p>\r\n\r\n";return __p},this.JST["app/scripts/templates/TableModelView.ejs"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+=(null==(__t=id)?"":__t)+"\r\n\r\n";return __p},client.Models=client.Models||{},function(){"use strict";client.Models.Model=Backbone.Model.extend({defaults:{category_name:"noname"},view:void 0})}(),client.Collections=client.Collections||{},function(){"use strict";client.Collections.Collection=Backbone.Collection.extend({model:client.Models.Model,initialize:function(){this.fetch({reset:!0})},url:"/categories",testAdding:function(){var a=client.Models.Model;this.add(new a({category_name:"Dricks"})),this.add(new a({category_name:"Dessetrs"})),this.add(new a({category_name:"Entrees"})),this.add(new a({category_name:"Sides"})),this.add(new a({category_name:"Bar"}))}})}(),client.Views=client.Views||{},function(){"use strict";client.Views.View=Backbone.View.extend({model:void 0,tagName:"div",className:"category-container",template:JST["app/scripts/templates/CategoryView.ejs"],render:function(){return this.$el.html(this.template(this.model.toJSON())),this}})}(),client.Views=client.Views||{},function(){"use strict";client.Views.CollectionView=Backbone.View.extend({cattegories_obj:{},el:$("#menu-container"),initialize:function(){this.$el=$("#menu-container"),this.collection=new client.Collections.Collection,this.collection.on("reset",this.afterLoad,this)},afterLoad:function(){this.render(),Backbone.Mediator.pub("categories-ready",this.cattegories_obj)},render:function(){this.$el.html("Menu"),this.collection.each(this.addOneCategory,this)},addOneCategory:function(a){var b=new client.Views.View({model:a});this.cattegories_obj[a.get("category_name")]=b.$el,this.$el.append(b.render().$el)}})}(),client.Models=client.Models||{},function(){"use strict";client.Models.TableModel=Backbone.Model.extend({defaults:{orderid:"",state:"vacant",activity:"false",capacity:"n/a",waiter:"n/a"}})}(),client.Collections=client.Collections||{},function(){"use strict";client.Collections.TableCollection=Backbone.Collection.extend({model:client.Models.TableModel})}(),client.Views=client.Views||{},function(){"use strict";client.Views.TableModelView=Backbone.View.extend({initialize:function(){this.model.on("change",this.render,this),Backbone.Mediator.sub("order-create",this.tableOccupy,this),Backbone.Mediator.sub("order-close",this.tableRelease,this),Backbone.Mediator.sub("changeactivity",this.tableActivity,this)},className:function(){return"vacant"===this.model.get("state")?"table_vacant_unactive":"table_occupied_unactive"},template:_.template("<%=id%>"),events:{click:"tableChoose"},tableActivity:function(a){this.model.id!=a&&(this.$el.className="table_vacant_active"===this.$el.className?"table_vacant_unactive":"table_occupied_unactive",this.model.set("activity","false"))},tableChoose:function(a){Backbone.Mediator.pub("table-active",this.model.orderid),Backbone.Mediator.pub("changeactivity",this.model.id),console.log("Event 'table-active' published"),this.model.set("activity","true"),this.$el.className="table_vacant_unactive"===this.$el.className?"table_vacant_active":"table_occupied_active",a.stopPropagation()},tableOccupy:function(a){"true"===this.model.get("activity")&&(this.model.set("state","occupied"),this.el.className="table_occupied_active",this.model.orderid=a,this.model.url="tables/"+this.model.id+".json",this.model.save({silent:"true"}))},tableRelease:function(){"true"===this.model.get("activity")&&(this.model.set("state","vacant"),this.el.className="table_vacant_active",this.model.orderid="",this.model.url="tables/"+this.model.id+".json",this.model.save({silent:"true"}))},render:function(){return console.log(this.model),this.$el.html(this.template(this.model.toJSON())),this}})}(),client.Views=client.Views||{},function(){"use strict";client.Views.TableCollectionView=Backbone.View.extend({initialize:function(){this.collection=new client.Collections.TableCollection,this.collection.url="tables.json",this.collection.fetch(),console.log("Fetching Collection Complete"),this.collection.once("sync",this.render,this)},el:$("#hall"),render:function(){console.log("Rendering Collection..."),this.collection.each(this.rendermodel,this),console.log(this.collection),console.log("Collection Rendered")},rendermodel:function(a){var b=new client.Views.TableModelView({model:a});this.$el.append(b.render().el)}})}(),client.Models=client.Models||{},function(){"use strict";client.Models.OrderModel=Backbone.Model.extend({initialize:function(){},defaults:{status:"opened"},saveNew:function(){this.url="orders.json",this.save()},existFetch:function(a){this.url="orders/"+a+".json",this.fetch()},saveClosed:function(){this.url="orders/"+this.id+".json",this.save()}})}(),client.Views=client.Views||{},function(){"use strict";client.Views.OrderView=Backbone.View.extend({initialize:function(){this.$el.html(this.template()),Backbone.Mediator.sub("table-active",this.universalShow,this)},events:{"click #order_close":"close"},template:JST["app/scripts/templates/Order.ejs"],universalShow:function(a){a.ordernew?this.newCreate():this.existRender(a)},newCreate:function(){this.model=new client.Models.OrderModel,this.$el.find("#order_items").css("visibility","visible"),this.$el.find("#order_close").css("visibility","hidden"),this.newPub()},newPub:function(){var a=this.$el.find("#order_items"),b="",c={order_id:b,el:a,"new":!0};Backbone.Mediator.subscribeOnce("orderitem-add",this.orderSave,this),Backbone.Mediator.pub("order-show",c)},showSyncModel:function(){this.$el.find("#order_close").css("visibility","visible")},existRender:function(a){var b,c=this.$el.find("#order_items");this.model=new client.Models.OrderModel,this.model.existFetch(a.id),this.$el.find("#order_close").css("visibility","visible"),c.css("visibility","visible"),b={order_id:a.id,el:c,"new":!1},this.model.once("sync",this.showSyncModel,this),Backbone.Mediator.unsubscribe("orderitem-add",this.orderSave,this),Backbone.Mediator.pub("order-show",b)},close:function(){this.$el.find("#order_close").css("visibility","hidden"),this.$el.find("#order_items").css("visibility","hidden"),this.model.set({status:"closed"}),this.model.saveClosed(),Backbone.Mediator.unsubscribe("orderitem-add",this.orderSave,this),Backbone.Mediator.pub("order-close")},orderSave:function(){this.model.saveNew(),this.model.once("sync",this.successSaveNew,this)},successSaveNew:function(){var a=this.model.get("id");this.$el.find("#order_close").css("visibility","visible"),Backbone.Mediator.pub("order-create",a)}})}(),client.Models=client.Models||{},function(){"use strict";client.Models.OrderitemModel=Backbone.Model.extend({defaults:{name:"N/A",amount:1,price:0,status:"Not ready",order_id:0}})}(),client.Collections=client.Collections||{},function(){"use strict";client.Collections.OrderitemsCollection=Backbone.Collection.extend({model:client.Models.OrderitemModel})}(),client.Views=client.Views||{},function(){"use strict";client.Views.OrderitemView=Backbone.View.extend({initialize:function(){Backbone.Mediator.sub("item-coincidence",this.incrCoincidenceAmount,this)},template:JST["app/scripts/templates/OrderItem.ejs"],events:{"click #add_amount":"incrAmount","click #remove_amount":"decrAmount"},render:function(){var a=this.model.get("price"),b=this.model.get("amount"),c=a*b;return this.$el.html(this.template(this.model.toJSON())),Backbone.Mediator.pub("amount",{operation:"add",difference:c}),this},incrAmount:function(a){a.stopPropagation(),a.preventDefault();var b=this.model.get("amount"),c=this.model.get("price"),d=this.$el.find("#remove_amount");b++,this.model.set("amount",b),this.saveItemModel(),Backbone.Mediator.pub("amount",{operation:"add",difference:c}),d.removeClass("close_item")},incrCoincidenceAmount:function(a){var b=a.get("amount"),c=a.get("price");b++,a.set("amount",b),this.saveItemModel(),Backbone.Mediator.pub("amount",{operation:"add",difference:c}),this.$el.find("#order_item_amount").html(this.model.get("amount"))},decrAmount:function(a){a.stopPropagation(),a.preventDefault();var b=this.model.get("amount"),c=this.model.get("price"),d=this.$el.find("#remove_amount");if(b--,b>0)this.model.set("amount",b),this.saveItemModel(),Backbone.Mediator.pub("amount",{operation:"sub",difference:c});else if(0==b)this.model.set("amount",b),this.saveItemModel(),Backbone.Mediator.pub("amount",{operation:"sub",difference:c}),d.addClass("close_item");else if(0>b){var e=this;this.model.url="order_items/"+this.model.id+".json",console.log("This model:"),console.dir(this.model),this.model.destroy({success:function(){e.remove(),console.log("Was destroy")}})}},saveItemModel:function(){this.model.url="order_items/"+this.model.id+".json",this.model.save({silent:!0},{error:function(){console.error("Amount saving ERROR!!!")}},{success:function(){}}),this.$el.find("#order_item_amount").html(this.model.get("amount"))}})}(),client.Views=client.Views||{},function(){"use strict";client.Views.OrderitemcollectionView=Backbone.View.extend({template:JST["app/scripts/templates/OrderItemCollection.ejs"],initialize:function(){this.collection=new client.Collections.OrderitemsCollection,this.collection.on("add",this.addItemToDB,this),this.collection.url="order_items.json",this.collection.fetch(),this.collection.on("reset",this.renderCollectionFromDB,this),Backbone.Mediator.sub("amount",this.changeSum,this),Backbone.Mediator.sub("orderitem-add",this.addDataToModel,this),Backbone.Mediator.sub("order-create",this.saveOrderId,this),this.collection.order_id=0},events:{click:"render"},render:function(){event.stopPropagation(),event.preventDefault(),Backbone.Mediator.pub("orderitem-add",{name:"Smth food...",price:10})},addDataToModel:function(a){var b=this.collection.where({name:a.name});b[0]?Backbone.Mediator.pub("item-coincidence",b[0]):this.collection.add(new client.Models.OrderitemModel({name:a.name,price:a.price,order_id:this.collection.order_id}))},changeSum:function(a){var b=Number(this.$el.find("#sum").html()),c={add:function(){b+=Number(a.difference)},sub:function(){b-=Number(a.difference)}};c[a.operation](),b=b.toFixed(2),this.$el.find("#sum").html(String(b))},saveOrderId:function(a){this.collection.order_id=a.order_id,this.collection.each(this.changeOrderId,this),console.log(this.collection)},changeOrderId:function(a){a.set("order_id",this.collection.order_id),a.url="order_items/"+a.id+".json",a.save({silent:!0},{error:function(){console.error("Order_id saving ERROR!!!")}},{success:function(){console.log("Order_id saved"+this.collection)}})},addItemToDB:function(a){var b=new client.Views.OrderitemView({model:a});a.url="order_items.json",console.log("Begin adding item TO DB..."),console.log(this.collection),a.save({error:function(){console.error("Saving ERROR!!!")}},{success:function(){console.log("Finish adding item TO DB!")}}),this.$el.prepend(b.render().el)},addItemsFromDB:function(a){var b=new client.Views.OrderitemView({model:a});console.log(this.collection),this.$el.prepend(b.render().el)},renderCollectionFromDB:function(){var a=this.$el.find("#block_sum");a.find("#sum").html(""),this.$el.html(""),this.$el.append(a),console.log("Begin adding items FROM DB..."),this.collection.each(this.addItemsFromDB,this),console.log(this.collection),console.log("Finish adding items FROM DB!")}})}();